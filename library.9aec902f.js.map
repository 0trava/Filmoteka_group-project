{"mappings":"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","sources":["src/js/local-storage.js","src/js/generes.js","src/js/watched-queue-run.js","src/js/switch-theme.js","src/js/team-modal.js","src/js/scroll-up-btn.js"],"sourcesContent":["const KEY_WATCHED = 'watched';\nconst KEY_QUEUE = 'queue';\n\nexport const watched = getWatched() || [];\nexport const queue = getQueue() || [];\n\nexport function setWatched(array) {\n  localStorage.setItem(KEY_WATCHED, JSON.stringify(array));\n}\n\nexport function setQueue(array) {\n  localStorage.setItem(KEY_QUEUE, JSON.stringify(array));\n}\n\nexport function getWatched() {\n  return JSON.parse(localStorage.getItem(KEY_WATCHED));\n}\nexport function getQueue() {\n  return JSON.parse(localStorage.getItem(KEY_QUEUE));\n}\n","export const movieGenresIds = {\n  28: 'Action',\n  12: 'Adventure',\n  16: 'Animation',\n  35: 'Comedy',\n  80: 'Crime',\n  99: 'Documentary',\n  18: 'Drama',\n  10751: 'Family',\n  14: 'Fantasy',\n  36: 'History',\n  27: 'Horror',\n  10402: 'Music',\n  9648: 'Mystery',\n  10749: 'Romance',\n  878: 'Science Fiction',\n  10770: 'TV Movie',\n  53: 'Thriller',\n  10752: 'War',\n  37: 'Western',\n};\n\nexport function getGenre(genre_ids) {\n  return genre_ids.map(id => movieGenresIds[id]).join(', ');\n}\n\nexport function getGenrelibrary(genre_ids) {\n  return genre_ids.map(({ name }) => name).join(', ');\n}\n","import { watched, queue } from './local-storage';\nimport {getGenrelibrary} from './generes';\n\n// import { getMovieInfoById } from './api-service';\n\nconst API_KEY = '34e68a416eb051ec4adf34df5a0038fd';\nconst API_URL = `https://api.themoviedb.org/3/`;\nconst API_URL_IMG = `https://image.tmdb.org/t/p/original`;\n\nconst libWatchedBtn = document.querySelector('.library-btn__watched');\nconst libQueueBtn = document.querySelector('.library-btn__queue');\nconst libContainer = document.querySelector('.library-gallery-wrap');\nconst spinner = document.querySelector('.dot-spinner');\n\nlibWatchedBtn.addEventListener('click', onlibWatchedBtnClick);\nlibQueueBtn.addEventListener('click', onlibQueueBtnClick);\nwindow.addEventListener('load', onlibWatchedBtnClick);\n\nasync function onlibWatchedBtnClick() {\n  if (watched.length === 0) return;\n\n  spinner.classList.remove('is-hidden');\n\n  const moviesList = await getMoviesList(watched);\n  const watchedList = createList(moviesList);\n\n  spinner.classList.add('is-hidden');\n\n  renderList(watchedList);\n}\n\nasync function onlibQueueBtnClick() {\n  if (queue.length === 0) return;\n\n  spinner.classList.remove('is-hidden');\n\n  const moviesList = await getMoviesList(queue);\n  const watchedList = createList(moviesList);\n\n  spinner.classList.add('is-hidden');\n\n  renderList(watchedList);\n}\n\nasync function getMovieInfoById(movieID) {\n  const resp = await fetch(\n    `${API_URL}movie/${movieID}?api_key=${API_KEY}&language=en-US`\n  );\n\n  const respData = await resp.json();\n\n  return respData;\n}\n\nasync function getMoviesList(array) {\n  const moviePromises = array.map(item => getMovieInfoById(item));\n  const moviesList = await Promise.all(moviePromises);\n  return moviesList;\n}\n\nfunction renderList(data) {\n  libContainer.innerHTML = '';\n  libContainer.insertAdjacentHTML('beforeend', data);\n}\n\nfunction createList(array) {\n  return array.reduce((acc, item) => {\n    return acc + createMarkup(item);\n  }, '');\n}\n\nfunction createMarkup(item) {\n  console.log(item);\n\n        let test = getGenrelibrary(item.genres);\n\n        // let item.year = release_date?.substring(0, 4);\n  return `\n            <li class=\"movie-card\"  ID=${item.id}>\n                <img class=\"movie-card__image\" src=\"${API_URL_IMG}${item.poster_path}\" \n                onerror=\"this.onerror=null;this.src='https://thumbs.dreamstime.com/b/атрибуты-кино-вьюрок-фи-ьма-и-во-а-со-ы-в-бумажном-стаканчике-87336791.jpg'\" \n                alt=\"${item.original_title}\" \n                width=\"300\"\n                ID=${item.id}>\n                <h2 class=\"movie-card__name\"   ID=${item.id}>${item.original_title}</h2>\n                <p class=\"movie-card__text\"   ID=${item.id}>${test} | ${item.release_date?.substring(0, 4)}</p>\n            </li>\n        `;\n}\n","const Theme = {\n  LIGHT: 'light-theme',\n  DARK: 'dark-theme',\n  GREY: 'grey-background-theme',\n};\n\nconst body = document.querySelector('body');\nconst footer = document.querySelector('footer');\nconst modal = document.querySelector('#modal');\n\nconst paginator = document.querySelector('#pagination');\n\nconst setElementsColor = color => {\n  const elements = document.querySelectorAll('.movie-card__name');\n  for (let i = 0; i < elements.length; i++) {\n    elements[i].style.color = color;\n  }\n};\n\nconst delClassElem = () => {\n  body.classList.remove(Theme.LIGHT, Theme.DARK);\n  footer.classList.remove(Theme.LIGHT, Theme.GREY);\n  modal.classList.remove(Theme.LIGHT, Theme.GREY);\n};\n\nconst setTheme = theme => {\n  if (theme === 'darkTheme') {\n    body.classList.add(Theme.DARK);\n    footer.classList.add(Theme.GREY);\n    modal.classList.add(Theme.GREY);\n\n    setElementsColor('#ffffff');\n  } else {\n    body.classList.add(Theme.LIGHT);\n    modal.classList.add(Theme.LIGHT);\n\n    setElementsColor('#121213f7');\n  }\n};\n\nconst themeSwitcher = document.querySelector('#switcher');\n\nthemeSwitcher.addEventListener('change', () => {\n  const theme = themeSwitcher.checked ? 'darkTheme' : 'lightTheme';\n  localStorage.setItem('Theme', theme);\n  delClassElem();\n  setTheme(theme);\n});\n\nconst savedTheme = localStorage.getItem('Theme');\nif (savedTheme !== null) {\n  themeSwitcher.checked = savedTheme === 'darkTheme';\n  setTheme(savedTheme);\n}\n","(() => {\n    const refs = {\n      openModalBtn: document.querySelector(\"[team-modal-open]\"),\n      closeModalBtn: document.querySelector(\"[team-modal-close]\"),\n      modal: document.querySelector(\"[team-modal]\"),\n    };\n  \n    refs.openModalBtn.addEventListener(\"click\", toggleModal);\n    refs.closeModalBtn.addEventListener(\"click\", toggleModal);\n  \n\n    document.querySelector(\"a\").onclick = function(e){ \n        e.preventDefault(); \n        window.open(this.href); \n      }\n      \n    function toggleModal() {\n      refs.modal.classList.toggle(\"is-hidden\");\n    }\n  })();","const scrollUpBtn = document.querySelector('.scroll-up-btn');\nscrollUpBtn.addEventListener('click', goUp);\nwindow.addEventListener('scroll', trackScroll)\n\nfunction trackScroll() {\n  const offset = window.pageYOffset;\n  const coords = document.documentElement.clientHeight;\n  if (offset > coords) {\n    scrollUpBtn.classList.add('go-up-show');\n  } else {\n    scrollUpBtn.classList.remove('go-up-show');\n  }\n}\n\nfunction goUp() {\n  if (window.pageYOffset > 0) {\n    window.scrollBy(0, -75);\n    setTimeout(goUp, 0);\n  }\n}"],"names":["$8125d1701b78b442$var$KEY_WATCHED","$8125d1701b78b442$var$KEY_QUEUE","$8125d1701b78b442$export$e330b7faa493c08b","JSON","parse","localStorage","getItem","$8125d1701b78b442$export$4f7fa46ff53e516f","$b5593f442c2bb8e2$export$3917d349733aaf59","genre_ids","map","name","join","$bee345328e2e2240$var$API_KEY","$bee345328e2e2240$var$API_URL","$bee345328e2e2240$var$API_URL_IMG","$bee345328e2e2240$var$libWatchedBtn","document","querySelector","$bee345328e2e2240$var$libQueueBtn","$bee345328e2e2240$var$libContainer","$bee345328e2e2240$var$spinner","async","$bee345328e2e2240$var$onlibWatchedBtnClick","length","classList","remove","watchedList","$bee345328e2e2240$var$createList","$bee345328e2e2240$var$getMoviesList","add","$bee345328e2e2240$var$renderList","array","moviePromises","item","movieID","resp","fetch","json","$bee345328e2e2240$var$getMovieInfoById","Promise","all","data","innerHTML","insertAdjacentHTML","reduce","acc","console","log","test","genres","id","poster_path","original_title","release_date","substring","$bee345328e2e2240$var$createMarkup","addEventListener","window","$c0cb484ed29a65f5$var$Theme","$c0cb484ed29a65f5$var$body","$c0cb484ed29a65f5$var$footer","$c0cb484ed29a65f5$var$modal","$c0cb484ed29a65f5$var$setElementsColor","color","elements","querySelectorAll","i","style","$c0cb484ed29a65f5$var$setTheme","theme","$c0cb484ed29a65f5$var$themeSwitcher","checked","setItem","$c0cb484ed29a65f5$var$savedTheme","refs","openModalBtn","closeModalBtn","modal","toggleModal","toggle","onclick","e","preventDefault","open","this","href","$6e615e981b554d80$var$scrollUpBtn","$6e615e981b554d80$var$goUp","pageYOffset","scrollBy","setTimeout","offset","coords","documentElement","clientHeight"],"version":3,"file":"library.9aec902f.js.map"}